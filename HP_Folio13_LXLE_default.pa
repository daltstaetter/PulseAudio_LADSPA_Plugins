#!/usr/bin/pulseaudio -nF
#
# This file is part of PulseAudio.
#
# PulseAudio is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# PulseAudio is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with PulseAudio; if not, see <http://www.gnu.org/licenses/>.

# This startup script is used only if PulseAudio is started per-user
# (i.e. not in system mode)

# DEA 1/19/22 kill/restart PA "pulseaudio --kill && pulseaudio --start"

.nofail

### Load something into the sample cache
#load-sample-lazy x11-bell /usr/share/sounds/freedesktop/stereo/bell.oga
#load-sample-lazy pulse-hotplug /usr/share/sounds/freedesktop/stereo/device-added.oga
#load-sample-lazy pulse-coldplug /usr/share/sounds/freedesktop/stereo/device-added.oga
#load-sample-lazy pulse-access /usr/share/sounds/freedesktop/stereo/message.oga

.fail

### Automatically restore the volume of streams and devices
load-module module-device-restore
load-module module-stream-restore
load-module module-card-restore

### Automatically augment property information from .desktop files
### stored in /usr/share/application
load-module module-augment-properties

### Should be after module-*-restore but before module-*-detect
load-module module-switch-on-port-available

### Load audio drivers statically
### (it's probably better to not load these drivers manually, but instead
### use module-udev-detect -- see below -- for doing this automatically)
#load-module module-alsa-sink
#load-module module-alsa-source device=hw:1,0
#load-module module-oss device="/dev/dsp" sink_name=output source_name=input
#load-module module-oss-mmap device="/dev/dsp" sink_name=output source_name=input
#load-module module-null-sink
#load-module module-pipe-sink

### Automatically load driver modules depending on the hardware available
.ifexists module-udev-detect.so
load-module module-udev-detect
.else
### Use the static hardware detection module (for systems that lack udev support)
load-module module-detect
.endif

### Automatically connect sink and source if JACK server is present
.ifexists module-jackdbus-detect.so
.nofail
load-module module-jackdbus-detect channels=2
.fail
.endif

### Automatically load driver modules for Bluetooth hardware
.ifexists module-bluetooth-policy.so
load-module module-bluetooth-policy
.endif

.ifexists module-bluetooth-discover.so
load-module module-bluetooth-discover
.endif

### Load several protocols
.ifexists module-esound-protocol-unix.so
load-module module-esound-protocol-unix
.endif
load-module module-native-protocol-unix

### Network access (may be configured with paprefs, so leave this commented
### here if you plan to use paprefs)
#load-module module-esound-protocol-tcp
#load-module module-native-protocol-tcp
#load-module module-zeroconf-publish

### Load the RTP receiver module (also configured via paprefs, see above)
#load-module module-rtp-recv

### Load the RTP sender module (also configured via paprefs, see above)
#load-module module-null-sink sink_name=rtp format=s16be channels=2 rate=44100 sink_properties="device.description='RTP Multicast Sink'"
#load-module module-rtp-send source=rtp.monitor

### Load additional modules from GConf settings. This can be configured with the paprefs tool.
### Please keep in mind that the modules configured by paprefs might conflict with manually
### loaded modules.
.ifexists module-gconf.so
.nofail
load-module module-gconf
.fail
.endif

### Automatically restore the default sink/source when changed by the user
### during runtime
### NOTE: This should be loaded as early as possible so that subsequent modules
### that look up the default sink/source get the right value
load-module module-default-device-restore

### Automatically move streams to the default sink if the sink they are
### connected to dies, similar for sources
load-module module-rescue-streams

### Make sure we always have a sink around, even if it is a null sink.
load-module module-always-sink

### Honour intended role device property
load-module module-intended-roles

### Automatically suspend sinks/sources that become idle for too long
load-module module-suspend-on-idle

### If autoexit on idle is enabled we want to make sure we only quit
### when no local session needs us anymore.
.ifexists module-console-kit.so
load-module module-console-kit
.endif
.ifexists module-systemd-login.so
load-module module-systemd-login
.endif

### Enable positioned event sounds
load-module module-position-event-sounds

### Cork music/video streams when a phone stream is active
#load-module module-role-cork

### Block audio recording for snap confined packages unless they have
### the "pulseaudio" or "audio-record" interfaces plugged.
.ifexists module-snap-policy.so
load-module module-snap-policy
.endif

### Modules to allow autoloading of filters (such as echo cancellation)
### on demand. module-filter-heuristics tries to determine what filters
### make sense, and module-filter-apply does the heavy-lifting of
### loading modules and rerouting streams.
load-module module-filter-heuristics
load-module module-filter-apply

# X11 modules should not be started from default.pa so that one daemon
# can be shared by multiple sessions.

### Load X11 bell module
#load-module module-x11-bell sample=x11-bell

### Register ourselves in the X11 session manager
#load-module module-x11-xsmp

### Publish connection data in the X11 root window
#.ifexists module-x11-publish.so
#.nofail
#load-module module-x11-publish
#.fail
#.endif

### Make some devices default
#set-default-sink output
#set-default-source input

load-module module-equalizer-sink
load-module module-dbus-protocol

#.include /etc/pulse/default.pa # this imports whatever is in this location as a system-wide default

############################################################################

# DEA 1/19/22 kill/restart PA "pulseaudio --kill && pulseaudio --start"

############################################################################

# DA 8/10/2019
# Auto start after bootup
# https://www.youtube.com/watch?v=NXE-kSrhk_w
# https://github.com/gotbletu/shownotes/blob/master/pulseaudio-dynamic-range-compression.md
# Documentation for 'control' variable
# http://plugin.org.uk/ladspa-swh/docs/ladspa-swh.html#tth_sEc2.71
# https://askubuntu.com/questions/95716/automatically-adjust-the-volume-based-on-content?noredirect=1&lq=1
# see https://wiki.archlinux.org/title/Sound:Category
# 	- see page "PulseAudio"
#		- https://wiki.archlinux.org/title/PulseAudio#Audio_post-processing
#			- see DRC section about module-ladspa-sink for low latency
#				- https://www.freedesktop.org/wiki/Software/PulseAudio/Documentation/User/Modules/#module-ladspa-sink
#				- values cant be changed on the fly for plugins. You can try to use http://jack-rack.sourceforge.net/
# 	- see page "PulseAudio/Examples"
# 	- see page "PulseAudio/Troubleshooting"

# see www.ladspa.org/cmt/overview.html
# 	see www.ladspa.org/cmt/index.html
#		|-> analyseplugin (1)    - analyse plugin syntax
#		|-> applyplugin (1)      - apply LADSPA plugin to an audio file
#		|-> listplugins (1)      - list available LADSPA plugins
#	- Note: "apropos ladspa"
# 		ex: analyzeplugin sc4

# Example:
#	$ listplugins  | grep "sc4"
# 	$ analyseplugin /usr/lib/ladspa/sc4_1882.so
	
#Plugin Name: "SC4"
#Plugin Label: "sc4"
#Plugin Unique ID: 1882
#Maker: "Steve Harris <steve@plugin.org.uk>"
#Copyright: "GPL"
#Must Run Real-Time: No
#Has activate() Function: No
#Has deactivate() Function: No
#Has run_adding() Function: Yes
#Environment: Normal or Hard Real-Time
#Ports:  "RMS/peak" input, control, 0 to 1, default 0
#        "Attack time (ms)" input, control, 1.5 to 400, default 101.125
#        "Release time (ms)" input, control, 2 to 800, default 401
#        "Threshold level (dB)" input, control, -30 to 0, default 0
#        "Ratio (1:n)" input, control, 1 to 20, default 1
#        "Knee radius (dB)" input, control, 1 to 10, default 3.25
#        "Makeup gain (dB)" input, control, 0 to 24, default 0
#        "Amplitude (dB)" output, control, -40 to 12
#        "Gain reduction (dB)" output, control, -24 to 0
#        "Left input" input, audio
#        "Right input" input, audio
#        "Left output" output, audio
#        "Right output" output, audio
# 
# load-module module-ladspa-sink sink_name=<hard_compressor(I can name this and use as later sink references)> master=<alsa_output.pci-0000_00_1b.0.analog-stereo (upstream source)> plugin=<sc4_1882 (name of plugin in /usr/lib/ladspa/*.so)> label=<sc4 (from "Plugin Label:" above) control=<1,1.5,401,-24,16,7,16 (these are the ports)> sink_properties="device.description='Hard-Compress-Master'" (this is the name I see in pavucontrol for the stream)

# Helper Functions:
#		- listplugins
#			- see directory /usr/lib/ladspa/* for plugin dir list
#			- set environment variable LADSPA_PATH=/usr/lib/ladspa


### Pulseaudio Dynamic Range Compression (LADSPA swh-plugins)

# set primary audio as default
# Note: We want primary audio first then switch to compressor audio at the end to avoid
#         having no sound on bootup. Use the command to see your audio list.
#         $ pacmd list-(sinks|sources) | awk '/index/ || /name:/ || /alsa.card_name/ || /device.description/'
#         or
#         $ pacmd list-(sinks|sources) | grep -e 'name:' -e 'index:'


set-default-source alsa_output.pci-0000_00_1b.0.analog-stereo

# load ladspa module
.ifexists module-ladspa-sink.so

.nofail

#############################################
# START LADSP Fast Limiter
#############################################
# Fast Lookahead Limiter
load-module module-ladspa-sink sink_name=ladspa_normalized master=alsa_output.pci-0000_00_1b.0.analog-stereo plugin=fast_lookahead_limiter_1913 label=fastLookaheadLimiter control=5,-10,0.8 sink_properties="device.description='Look-Ahead_Limiter-cascade0'"

#############################################
# START LADSP Soft Compressor
#############################################
# load sound-compressor
# Mono: control={RMS/peak, attack_ms, release_ms, Thld_lvl(dB), Ration(1:n), Knee_radius(dB), Makeup_gain(dB) 
load-module module-ladspa-sink sink_name=compressor-mono master=alsa_output.pci-0000_00_1b.0.analog-stereo plugin=sc4m_1916 label=sc4m control=1,1.5,401,-12,10,2,0 sink_properties="device.description='Soft-Compress-Master'"
load-module module-ladspa-sink sink_name=compressor-mono master=ladspa_normalized plugin=sc4m_1916 label=sc4m control=1,1.5,401,-12,10,2,0 sink_properties="device.description='Soft-Compress-cascade1'"

#############################################
# START LADSP Hard Compressor
#############################################
# Stereo: control={RMS/peak, attack_ms, release_ms, Thld_lvl(dB), Ration(1:n), Knee_radius(dB), Makeup_gain(dB), Gain_reduction(dB)
load-module module-ladspa-sink sink_name=hard_compressor master=alsa_output.pci-0000_00_1b.0.analog-stereo plugin=sc4_1882 label=sc4 control=1,1.5,401,-24,16,7,16 sink_properties="device.description='Hard-Compress-Master'"
load-module module-ladspa-sink sink_name=hard_compressor master=ladspa_normalized                          plugin=sc4_1882 label=sc4 control=1,1.5,401,-24,16,7,16 sink_properties="device.description='Hard-Compress-cascade2'"


#############################################
# START LADSP REMAP
#############################################
# 10/15/2019
# https://wiki.archlinux.org/index.php/PulseAudio/Examples
load-module module-remap-sink sink_name=Left-to-Mono sink_properties="device.description='Left-to-Mono'" master=alsa_output.pci-0000_00_1b.0.analog-stereo channels=2 master_channel_map=mono,mono channel_map=front-left,rear-left

#load-module module-remap-sink sink_name=Right-to-Mono sink_properties="device.description='Right-to-Mono'" master=alsa_output.pci-0000_00_1b.0.analog-stereo channels=2 master_channel_map=mono,mono channel_map=front-right,rear-right

#load-module module-remap-sink sink_name=mono master=alsa_output.pci-0000_00_1b.0.analog-stereo  sink_properties="device.description='Mono'" channels=2 channel_map=mono,mono
#############################################
# END LADSP REMAP
#############################################


.fail
# nothing
.endif







